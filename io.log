[2024-03-21] Implementation Plan for Menu System and Save Functionality

1. Core Menu System (Completed)
   - Created AppState.h with state management
   - Added SaveManager for save file handling
   - Implemented basic menu UI with ImGui
   - Added state transitions (Menu -> Running -> Menu)

2. Save System (In Progress)
   - Basic save file structure implemented
   - Save directory management in place
   - JSON-based save format ready
   - Voxel data serialization implemented
     * Added VoxelData class with JSON serialization
     * Added voxel management functions
     * Added file I/O operations
     * Added version tracking for save files
   - SaveManager integration complete
     * Updated SaveManager to handle VoxelData
     * Added proper voxel count tracking
     * Improved save file validation
     * Added error handling for save/load operations

3. Next Steps
   a. Loading Screen (Next Priority)
      - Add progress bar
      - Show loading status
      - Handle async loading
   
   b. Settings Menu
      - Graphics settings
      - Control bindings
      - Save preferences
   
   c. Save File Management
      - Add thumbnails
      - Add save file metadata
      - Add auto-save functionality

4. Current Implementation Status
   - Menu system is functional
   - Basic save/load structure in place
   - ESC key returns to menu
   - Save file picker implemented
   - Voxel data serialization complete
   - SaveManager integration complete
   - Need to implement loading screen

5. Known Issues
   - No loading screen during save/load
   - No error handling for failed saves
   - No auto-save functionality
   - Need to test voxel data serialization with large datasets

6. Next Implementation Focus
   - Loading screen implementation
   - Error handling improvements
   - Performance testing with large voxel sets

[2024-03-21] Added VoxelData Implementation
- Created VoxelData.h with voxel structure and serialization
- Implemented VoxelData.cpp with file I/O and management
- Added JSON serialization for voxel data
- Added version tracking for save file compatibility

[2024-03-21] Updated SaveManager Integration
- Modified SaveManager to handle VoxelData
- Updated save/load operations to work with voxel data
- Improved save file validation and error handling
- Added proper voxel count tracking in save files

[2024-03-21] Loading Screen Prototype
- Added async save loading with std::future
- Added drawLoading() with progress bar
- Integrated new Loading state in main loop
- Added loading state members to VulkanEngine
- Progress currently time-based placeholder; will later hook to real progress

[2024-03-21] Loading Screen Improvements
- Added real progress tracking with atomic float
- Added detailed loading status messages
- Implemented phased loading (file read, data processing, completion)
- Added error handling with user-friendly messages
- Removed fake time-based progress
- Added proper state transitions on success/failure

[2024-03-21] Auto-Save Implementation
- Added auto-save functionality that triggers every 5 minutes when paused
- Added auto-save toggle in settings menu
- Added timestamp-based auto-save filenames
- Added error handling for auto-save operations
- Added console logging for auto-save status

[2024-03-21] Save Management Improvements
- Added manual save hotkey (F5)
- Implemented auto-save cleanup (keeps last 5 auto-saves)
- Added mutex protection for save operations
- Added timestamp-based save filenames
- Added console logging for save operations
- Refactored save filename generation

[2024-03-21] Loading Cancellation Implementation
- Added loading cancellation support with atomic flag
- Added cancel button to loading screen
- Added cancellation checks during loading phases
- Added proper state cleanup after cancellation
- Added user feedback during cancellation
- Added thread-safe cancellation handling

Next Steps:
- Add save preferences in settings menu:
  * Auto-save interval configuration
  * Maximum auto-saves to keep
  * Save file compression options
  * Save file backup options
  * Custom save directory 